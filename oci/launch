#!/usr/bin/env bash

# Strict Bash Mode
set -euo pipefail

here="${BASH_SOURCE[0]%/*}"
source "$here/../shared/functions.sh"

source "$here/use"

QUIET=true source "$here/box"

# Set variables
instance_name="${box%.*}"

for ssh_pub_key in "${ssh_pub_key:-XYZ}" ~/.ssh/id_rsa.pub ~/.ssh/id_ed25519.pub ~/.ssh/id_ed25519_sk.pub $@
do
    [[ -f "$ssh_pub_key" ]] && break
done

# Get compartment ID
# compartment_id=$(oci iam compartment list --name $compartment_name --query "data[0].id" --raw-output)

# Get image ID (first match)
if [[ -z ${image_id+x} ]]; then
    image_id=$(oci compute image list --compartment-id $TENANCY --all --raw-output \
        --query "data[?starts_with( @.\"display-name\", '$image') ] | [0].id" )
fi

[[ -z "$image_id" ]] && echo "image $image not found" && exit

subnet_id=$(oci network subnet list --compartment-id $TENANCY --all --raw-output \
    --query "data[? \"display-name\" == '$subnet' ] | [0].id")

[[ -z "$subnet_id" ]] && echo "subnet $subnet not found" && exit

shh cyan show instance_name shape zone ssh_pub_key image_id subnet_id 

# Create instance
options=()
$VERBOSE && export OCI_CLI_LOGLEVEL=INFO
$DEBUG && options+=(--debug)
options+=(--compartment-id $TENANCY)
options+=(--display-name $instance_name)
options+=(--shape $shape)
options+=(--image-id $image_id)
options+=(--subnet-id $subnet_id)
options+=(--availability-domain "$zone")
options+=(--ssh-authorized-keys-file "$ssh_pub_key")
options+=(--wait-for-state RUNNING)
[[ "${public_ip:-}" != "false" ]] && options+=(--assign-public-ip true)
[[ -n ${user_data_uri+x} ]] && options+=(--user-data-file "${user_data_uri}")
[[ -n ${user_data+x} ]] && options+=(--user-data-file "$here/user_data/${user_data}")

add_options_from_env_prefixed oci_cli_launch_option

shhd cyan echo oci compute instance launch "${options[@]}"

loud green oci compute instance launch "${options[@]}"

#${BASH_SOURCE[0]%/*}/action ip $instance_name
green ${BASH_SOURCE[0]%/*}/update_ip $instance_name
